import React, { useEffect, useRef, useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import '@fortawesome/fontawesome-free/css/all.min.css';
import * as bootstrap from 'bootstrap';
import { supabase } from '../supabaseClient';
import NavbarPage from './NavbarPage';

function AdminPage() {
    const [showAddForm, setShowAddForm] = useState(false);
    const [showOtherBank, setShowOtherBank] = useState(false);

    const toggleAddForm = () => {
        setShowAddForm(prev => !prev);
    };

    const handleBankChange = (e) => {
        setShowOtherBank(e.target.value === '‡∏≠‡∏∑‡πà‡∏ô‡πÜ');
    };

    const handleAddEmployee = (e) => {
        e.preventDefault();
        // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å form ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ document.getElementById(...) ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡∏°‡∏≤‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
        console.log("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà");
    };

    const [attendanceLogs, setAttendanceLogs] = useState([]);
    const [logError, setLogError] = useState(null);

    async function viewAttendanceLog() {
        const { data, error } = await supabase.from("attendance_log").select("*").order("timestamp", { ascending: false });
        if (error) {
            setLogError("‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            setAttendanceLogs([]);
        } else {
            setLogError(null);
            setAttendanceLogs(data);
        }
    }

    const [showCheckInQR, setShowCheckInQR] = useState(false);
    const [showCheckOutQR, setShowCheckOutQR] = useState(false);
    const [checkInQRUrl, setCheckInQRUrl] = useState('');
    const [checkOutQRUrl, setCheckOutQRUrl] = useState('');

    async function toggleQRCode(type) {
        const today = new Date().toISOString().split("T")[0];
        const codeData = `qr-code-${type}-${today}`;
        const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${codeData}`;

        await saveQRCodeToDatabase(codeData, type, today);

        if (type === "check-in") {
            setCheckInQRUrl(qrUrl);
            setShowCheckInQR(prev => !prev);
        } else if (type === "check-out") {
            setCheckOutQRUrl(qrUrl);
            setShowCheckOutQR(prev => !prev);
        }
    }

    async function saveQRCodeToDatabase(codeData, type, dateStr) {
        const { data, error } = await supabase
            .from("daily_qr_codes")
            .upsert([
                {
                    date: dateStr,
                    qr_code_text: codeData,
                    type: type,
                }
            ], { onConflict: ['date', 'type'] }); // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô insert ‡∏ã‡πâ‡∏≥
      
        if (error) {
            console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å QR ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", error.message);
        } else {
            console.log("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å QR ‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß");
        }
    }

    const showSection = (id) => {
        const sections = document.querySelectorAll('.section');
        sections.forEach(section => section.classList.remove('active'));
        const target = document.getElementById(id);
        if (target) target.classList.add('active');
    };

    return (
        <div>
            <NavbarPage showSection={showSection}/>
            <div className="main-content">
                <div id="admin" className="section">
                    <h2>üõ†Ô∏è ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö</h2>
                    <p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</p>
                    <div className="mb-4">
                        <h4>üë• ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h4>
                        <button className="btn btn-outline-primary me-2 mb-2" onClick={toggleAddForm}>‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</button>
                        <button className="btn btn-outline-warning me-2 mb-2">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                        <button className="btn btn-outline-danger me-2 mb-2">üóëÔ∏è ‡∏•‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</button>

                        {showAddForm && (
                            <form id="add-employee-form" className="row g-2 mb-3" onSubmit={handleAddEmployee}>
                                <div className="col-md-4">
                                    <input type="text" className="form-control" id="name" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á" required />
                                </div>
                                <div className="col-md-4">
                                    <input type="text" className="form-control" id="username" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô" required />
                                </div>
                                <div className="col-md-4">
                                    <input type="email" className="form-control" id="email" placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" required />
                                </div>
                                <div className="col-md-4">
                                    <input type="text" className="form-control" id="tel" placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£" required />
                                </div>
                                <div className="col-md-4">
                                    <select id="role" className="form-select" required>
                                        <option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</option>
                                        <option value="Full-time">Full-time</option>
                                        <option value="Part-time">Part-time</option>
                                        <option value="Internship">Internship</option>
                                    </select>
                                </div>
                                <div className="col-md-4">
                                    <select id="bank" className="form-select" required onChange={handleBankChange}>
                                        <option value="" disabled selected>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</option>
                                        <option value="‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û">‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û</option>
                                        <option value="‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå">‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå</option>
                                        <option value="‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢">‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢</option>
                                        <option value="‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢">‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢</option>
                                        <option value="‡∏Å‡∏£‡∏∏‡∏á‡∏®‡∏£‡∏µ">‡∏Å‡∏£‡∏∏‡∏á‡∏®‡∏£‡∏µ</option>
                                        <option value="‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô">‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô</option>
                                        <option value="‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå</option>
                                        <option value="‡∏≠‡∏∑‡πà‡∏ô‡πÜ">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
                                    </select>
                                </div>
                                {showOtherBank && (
                                    <div className="col-md-4" id="other-bank-container">
                                        <input type="text" className="form-control" id="other-bank" placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£" required />
                                    </div>
                                )}
                                <div className="col-md-4">
                                    <input type="text" className="form-control" id="bank_number" placeholder="‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ" required />
                                </div>
                                <div className="col-md-4">
                                    <button type="submit" className="btn btn-success">‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                                </div>
                            </form>
                        )}

                        {logError && <p className="text-danger">{logError}</p>}
                        <ul className="list-group">
                            {attendanceLogs.map((log, index) => (
                                <li key={index} className="list-group-item">
                                üßæ {log.employee_id} - {log.check_type} @ {new Date(log.timestamp).toLocaleString("th-TH")}
                                </li>
                        ))}
                        </ul>
                    </div>

                    <div className="mb-4">
                        <h4>üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô/‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô</h4>
                        <button className="btn btn-outline-secondary" onClick={viewAttendanceLog}>üìÖ ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥</button>
                        <div id="attendance-log"></div>
                    </div>

                    <div className="mb-4">
                        <h4>üì¶ QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</h4>
                        <button className="btn btn-outline-success me-2 mb-2" onClick={() => toggleQRCode("check-in")}>
                            üîÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á QR ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
                        </button>
                        {showCheckInQR && (
                            <div className="mt-3">
                            <h5>QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô:</h5>
                            <img src={checkInQRUrl} alt="Check-in QR" />
                            </div>
                        )}
                        <button className="btn btn-outline-danger mb-2" onClick={() => toggleQRCode("check-out")}>
                            üîÑ ‡∏™‡∏£‡πâ‡∏≤‡∏á QR ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô
                        </button>
                        {showCheckOutQR && (
                            <div className="mt-3">
                            <h5>QR Code ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô:</h5>
                            <img src={checkOutQRUrl} alt="Check-out QR" />
                            </div>
                        )}
                    </div>
                </div>
            </div>
        </div>
    )
}


export default AdminPage;